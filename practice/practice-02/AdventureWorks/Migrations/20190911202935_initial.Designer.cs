// <auto-generated />
using System;
using AdventureWorks.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdventureWorks.Migrations
{
    [DbContext(typeof(AdventureWorksContext))]
    [Migration("20190911202935_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdventureWorks.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductCategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentProductCategoryId")
                        .HasColumnName("ParentProductCategoryID");

                    b.Property<Guid>("Rowguid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("ProductCategoryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("AK_ProductCategory_Name");

                    b.HasIndex("ParentProductCategoryId");

                    b.HasIndex("Rowguid")
                        .IsUnique()
                        .HasName("AK_ProductCategory_rowguid");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("AdventureWorks.Models.ProductCategory", b =>
                {
                    b.HasOne("AdventureWorks.Models.ProductCategory", "ParentProductCategory")
                        .WithMany("InverseParentProductCategory")
                        .HasForeignKey("ParentProductCategoryId")
                        .HasConstraintName("FK_ProductCategory_ProductCategory_ParentProductCategoryID_ProductCategoryID");
                });
#pragma warning restore 612, 618
        }
    }
}
